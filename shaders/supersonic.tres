[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;


uniform vec4 original_0: hint_color;
uniform vec4 original_1: hint_color;
uniform vec4 original_2: hint_color;
uniform vec4 original_3: hint_color;
uniform vec4 replace_0: hint_color;
uniform vec4 replace_1: hint_color;
uniform vec4 replace_2: hint_color;
uniform vec4 replace_3: hint_color;

const float precision = 0.1;


vec4 swap_color(vec4 color){
	vec4 original_colors[4] = vec4[4] (original_0, original_1, original_2, original_3);
	vec4 replace_colors[4] = vec4[4] (replace_0, replace_1, replace_2, replace_3);
	for (int i = 0; i < 4; i ++) {
		if (distance(color, original_colors[i]) <= precision){
			return replace_colors[i];
		}
	}
	return color;
}


void fragment() {
	COLOR = swap_color(texture(TEXTURE, UV));
}"
